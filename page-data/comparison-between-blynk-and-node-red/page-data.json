{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/comparison-between-blynk-and-node-red",
    "result": {"data":{"post":{"slug":"/comparison-between-blynk-and-node-red","title":"Comparison between Blynk and Node-RED","date":"02.02.2022","tags":[{"name":"HaeramKim","slug":"haeram-kim"},{"name":"Research","slug":"research"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Comparison between Blynk and Node-RED\",\n  \"date\": \"2022-02-02\",\n  \"tags\": [\"HaeramKim\", \"Research\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"\\uC774 \\uB0B4\\uC6A9\\uC740 \\uD655\\uC2E4\\uD558\\uC9C0 \\uC54A\\uC74C - Research\\uB97C \\uB354 \\uD558\\uBA74 \\uBC14\\uB014 \\uC5EC\\uC9C0\\uAC00 \\uCDA9\\uBD84\\uD788 \\uC788\\uB354\\uB77C\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Database Perspective\"), mdx(\"h3\", null, \"\\u201CThe development of smart flood monitoring system using ultrasonic sensor with blynk applications\\u201D, IEEE\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"N. A. Z. M. Noar and M. M. Kamal, \\\"The development of smart flood monitoring system using ultrasonic sensor with blynk applications,\\\" 2017 IEEE 4th International Conference on Smart Instrumentation, Measurement and Application (ICSIMA), 2017, pp. 1-6, doi: 10.1109/ICSIMA.2017.8312009.\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC8FC\\uBAA9\\uD574\\uC57C\\uB420 \\uBD80\\uBD84: \", mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"At the same time, the data is stored in a CSV database, through email this data can be converted into excel form, as well as being transmitted to the second NodeMCU via Blynk Bridge.  \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC774 \\uC5F0\\uAD6C\\uC5D0\\uC11C\\uB294 CSV File \\uC744 \\uC800\\uC7A5\\uC758 \\uC6A9\\uB3C4\\uB85C \\uC4F0\\uB294\\uB370 \\uC774\\uB7EC\\uD55C \\uACBD\\uC6B0\\uC5D0\\uB294 \\uCFFC\\uB9AC\\uB97C \\uD1B5\\uD55C \\uC870\\uD68C \\uD639\\uC740 \\uC5F0\\uC0B0\\uC774 \\uC81C\\uD55C\\uC801\\uC774\\uB2E4\")), mdx(\"h3\", null, \"(Legacy) Blynk: Enabling raw data storage\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"By default raw data storage is disabled (as it consumes disk space a lot). When you enable it, every Blynk.virtualWrite command will be saved to DB. You will need to install PostgreSQL Database (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"minimum required version is 9.5\"), \") to enable this functionality:\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"from\"), \" \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/blynkkk/blynk-server#enabling-raw-data-storage\"\n  }, \"GitHub - blynkkk/blynk-server\"), \"  \"), mdx(\"ul\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC544\\uB798\\uB294 \\uBB38\\uC81C\\uC810\\uB4E4\\uC784\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uC774 \\uBC29\\uBC95\\uC740 \\uC8FC\\uC5B4\\uC9C4 DB \\uC2A4\\uD0A4\\uB9C8\\uB97C \\uC0AC\\uC6A9\\uD574\\uC57C \\uD574\\uC11C \\uC720\\uC5F0\\uC131\\uC774 \\uBD80\\uC871\\uD558\\uB2C8\\uC774\\uB2E4\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uB610\\uD55C \\uCD5C\\uADFC\\uC5D0 Blynk Platform\\uC774 \\uB9AC\\uB274\\uC5BC\\uB418\\uC5B4 Legacy \\uBC84\\uC804\\uC744 \\uC0AC\\uC6A9\\uD560 \\uC218\\uB294 \\uC788\\uC9C0\\uB9CC \\uB354\\uC774\\uC0C1\\uC758 \\uC9C0\\uC6D0\\uC740 \\uB04A\\uAE40\")))), mdx(\"h3\", {\n    parentName: \"blockquote\"\n  }, \"(Latest) Blynk: HTTP API\"), mdx(\"ul\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.blynk.io/en/blynk.cloud/https-api-overview\"\n  }, \"Blynk.Cloud - HTTP API\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9AC\\uB274\\uC5BC\\uB41C Blynk\\uB294 \\uB354\\uC774\\uC0C1 Private Server\\uB85C \\uC791\\uB3D9\\uC2DC\\uD0A4\\uC9C0 \\uBABB\\uD558\\uACE0 \\uBB34\\uC870\\uAC74 Cloud Instance\\uB85C\\uB9CC \\uC791\\uB3D9\\uC2DC\\uCF1C\\uC57C \\uB428 - \\uADFC\\uB370, \\uC774\\uB54C DB\\uC5D0 \\uC9C1\\uC811 \\uC811\\uADFC\\uD560 \\uC218 \\uC788\\uB294 \\uAC83\\uC774 \\uC544\\uB2C8\\uB77C ReST API\\uB97C \\uD1B5\\uD55C \\uC811\\uADFC\\uBC16\\uC5D0 \\uC548\\uB418\\uB354\\uB77C\")), mdx(\"hr\", {\n    parentName: \"blockquote\"\n  }), mdx(\"h2\", {\n    parentName: \"blockquote\"\n  }, \"Logic Perspective\"), mdx(\"ul\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(\\uC9C0\\uAE08\\uAE4C\\uC9C0 \\uCC3E\\uC544\\uBCF8 \\uBC14\\uB85C\\uB294) Blynk \\uD074\\uB77C\\uC6B0\\uB4DC\\uC5D0\\uC11C Logic\\uC744 \\uAD6C\\uD604\\uD558\\uB294 \\uAC83\\uC774 \\uC544\\uB2CC \\uC544\\uB450\\uC774\\uB178\\uC5D0\\uC11C Logic\\uC744 \\uAD6C\\uD604\\uD558\\uB294\\uAC83 \\uAC19\\uB2E4\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"이 내용은 확실하지 않음 - Research를 더 하면 바뀔 여지가 충분히 있더라 Database Perspective “The development of smart flood monitoring system using ultrasonic sensor…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/comparison-between-blynk-and-node-red","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}