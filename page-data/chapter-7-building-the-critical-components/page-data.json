{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/chapter-7-building-the-critical-components",
    "result": {"data":{"post":{"slug":"/chapter-7-building-the-critical-components","title":"Chapter 7. Building the Critical Components","date":"16.01.2022","tags":[{"name":"HaeramKim","slug":"haeram-kim"},{"name":"BuildYourOwnIoTPlatform","slug":"build-your-own-io-t-platform"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Chapter 7. Building the Critical Components\",\n  \"date\": \"2022-01-16\",\n  \"tags\": [\"HaeramKim\", \"BuildYourOwnIoTPlatform\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"NOTE: this notes are from \\u201CBuild Your Own IoT Platform\\u201D by Anand Tamboli. And I can\\u2019t speak english very well, so some sentences or word might be inappropriate and might have some misunderstandings.  \")), mdx(\"h2\", null, \"Creating DB\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Before creating DB, you have to access PHPMyAdmin with root account.\")), mdx(\"h3\", null, \"Database\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Tap \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Databases\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Set Database name to \\u201CtSeriesDB\\u201D with \\u201CCollaton\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Press \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Create\"))), mdx(\"h3\", null, \"User\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In that database, press \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Privileges\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Goto \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Add user account\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Fill out \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"login information\"), \" (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Generate password\"), \" is optionary)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Check all \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Global privileges\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Press \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Go\"), \" btn.\")), mdx(\"h3\", null, \"Table\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Press\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Create table\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Set name as \\u201CthingsData\\u201D and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Number of data\"), \" as 5\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Set columns like:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"NAME        TYPE    LEN     DEFAULT     INDEX           A_I\\nID      INT     11      NONE        PRIMARY_KEY     ENABLE\\nTOPIC       VARCHAR 1024    NONE\\nPAYLOAD VARCHAR 2028    NONE\\nTIMESTAMP   VARCHAR 15      NONE\\nDELETED BINARY  1       AS DEFINED:0\\n\")), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"And \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"save\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Installing MySQL Plugin for NodeRED\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Run NodeRED\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Goto \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Manage Palette\"), \" in NodeRED menu\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Goto \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Install\"), \" Menu -> Install \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"node-red-node-MySQL\"))), mdx(\"hr\", null), mdx(\"h2\", null, \"Make \\u201CPublish Periodic Timestamp\\u201D Functionality\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This functionality is corresponded with \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"M1\"), \" API.\\n\", mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"index/Screen%20Shot%202022-01-16%20at%207.45.50%20PM.png\",\n    \"alt\": null\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"inject\"), \" node: Make sure that \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"msg.payload\"), \" be \\u201Ctimestamp\\u201D and set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"repeat\"), \"to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"interval\"), \" with every 15 seconds.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"debug\"), \" node: There\\u2019s no required configuration.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MQTT out\"), \" node: \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Server\"), \": \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Connection\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Server: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"localhost\"), \" with port \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"1883\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Protocol: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MQTT V3.1.1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Client ID: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"node-red\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keep Alive: 60\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Security\"), \": Enter your MQTT username and password.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Topic\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"timestamp\"))))), mdx(\"hr\", null), mdx(\"h2\", null, \"Make \\u201CPublish by ReST/POST\\u201D API\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This functionality is to publish some topic:payload with HTTP/ReST. This is neccesary because some circumstances, you can\\u2019t use MQTT to publish some data. And this is also helpful when you want to test the platform working as expected.\\n\", mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"index/Screen%20Shot%202022-01-16%20at%207.56.42%20PM.png\",\n    \"alt\": null\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HTTP in\"), \" node: Set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"method\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"POST\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"URL\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/pub/:topic/:payload\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \" node:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Remember that \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"msq.req\"), \" stores all the parsed data from HTTP request\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"So, to use HTTP request parameters, you have to use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"msg.req.params\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"And also, return value for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \" node is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"msg\"), \". Thus, you have to store return value to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"msg\"), \".\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"msg.topic = msg.req.params.topic.toString();\\nmsg.payload = msg.req.params.payload.toString();\\nmsg.qos = 2;\\nmsg.retain = false;\\n\\nreturn msg;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MQTT out\"), \" node: Basic server configurations are already setted. So, just fill out the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"topic\"), \" to \\u201Cmqtt\\u201D.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Another \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \" node: \")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"msg.payload = {\\n    success: true,\\n    message:\\\"published: \\\" +\\n            msg.req.params.topic + \\n            \\\"/\\\" + \\n            msg.req.params.payload\\n};\\n\\nreturn msg;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HTTP response\"), \" node: No configurations are neccesary.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Make \\u201CSubscribe & DB/INSERT Everything\\u201D Functionality\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This functionality is to store all the published data to the DB.\\n\", mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"index/Screen%20Shot%202022-01-16%20at%208.20.09%20PM.png\",\n    \"alt\": null\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MQTT in\"), \" node: Set topic to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#\"), \" to subscribe all kind of topic and set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"QoS\"), \" to 2 to filtering important data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \" node: This node makes SQL query for DB.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"// Create query\\n// get microtime\\nvar timestamp = new Date().getTime()/1000;\\n// pad it with trailing zeroes\\ntimestamp = timestamp.toString() + \\\"000\\\";\\n// trim to exact length 10 + 1 + 3\\ntimestamp = timestamp.substring(0, 14);\\n\\nvar strQuery =  \\\"INSERT INTO thingsData (topic, payload, timestamp, deleted)\\\" +\\n                \\\"VALUES ('\\\" + escape(msg.topic) + \\\"','\\\" + escape(msg.payload) + \\\"','\\\" + timestamp + \\\"', 0);\\\";\\nmsg.topic = strQuery;\\n\\nreturn msg;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mysql\"), \" node: Set database property to:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Host: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"127.0.0.1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Port: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"3306\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"User: user that can access to DB you made.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Password: password of that user.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Database: Database you made for this platform.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"debug\"), \" node: No configurations required.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Make \\u201CREST/GET one or more records from DB\\u201D Functionality\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This functionality corresponses to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"D1\"), \" and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"D2\"), \" API.\\n\", mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"index/Screen%20Shot%202022-01-16%20at%208.26.41%20PM.png\",\n    \"alt\": null\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HTTP in\"), \" node: Set method to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GET\"), \" and set URL to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/record/:topic\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Another \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HTTP in\"), \" node: Set method to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GET\"), \" and set URL to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/records/:topic/last/:count\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \" node: \")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"// Create query\\n\\n// if required record count is not specified\\n// set default to 1\\nif(!msg.req.params.count) {\\n    msg.req.params.count = 1;\\n}\\n\\n// build the sql query\\nmsg.topic =\\n    \\\"SELECT id,topic,payload,timestamp \\\" +\\n    \\\"FROM thingsData \\\" +\\n    \\\"WHERE topic='\\\" + escape(msg.req.params.topic) + \\\"' \\\" +\\n    \\\"AND deleted=0 \\\" +\\n    \\\"ORDER BY id DESC \\\" +\\n    \\\"LIMIT \\\" + msg.req.params.count + \\\";\\\";\\n\\nreturn msg;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mysql\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"http response\"), \" node: No configuration required.\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"NOTE: this notes are from “Build Your Own IoT Platform” by Anand Tamboli. And I can’t speak english very well, so some sentences or word…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/chapter-7-building-the-critical-components","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}