{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/chapter-9-creating-re-st-interface",
    "result": {"data":{"post":{"slug":"/chapter-9-creating-re-st-interface","title":"Chapter 9. Creating ReST Interface","date":"18.01.2022","tags":[{"name":"HaeramKim","slug":"haeram-kim"},{"name":"BuildYourOwnIoTPlatform","slug":"build-your-own-io-t-platform"}],"description":null,"canonicalUrl":null,"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Chapter 9. Creating ReST Interface\",\n  \"date\": \"2022-01-18\",\n  \"tags\": [\"HaeramKim\", \"BuildYourOwnIoTPlatform\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"NOTE: this notes are from \\u201CBuild Your Own IoT Platform\\u201D by Anand Tamboli. And I can\\u2019t speak english very well, so some sentences or word might be inappropriate and might have some misunderstandings.  \")), mdx(\"h2\", null, \"Make \\u201CReST/GET Records Based on Condition\\u201D Funtionality\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It\\u2019s simple; Fetch some records by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"topic-like\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"payload-like\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"count\"), \".\\n\", mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"index/Screen%20Shot%202022-01-17%20at%209.37.19%20AM.png\",\n    \"alt\": null\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HTTP in\"), \" node: Set method as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GET\"), \" and URL as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/records/topic-like/:topic/payload-like/:payload/last/:count\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \" node:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"// Create query\\n\\n// if no authentication filter defined or available\\n// set the default value as 1\\nif(!msg.req.authFilter)\\n    msg.req.authFilter = 1;\\n\\n// wildcard used for API query is * and this needs to be converted into SQL wildcard character %\\nmsg.topic = \\\"SELECT id,topic,payload,timestamp\\\" +\\n            \\\" FROM thingsData WHERE\\\" +\\n            \\\" topic LIKE '\\\" + msg.req.params.topic.\\n            replace(/\\\\*/g, \\\"%\\\") + \\\"'\\\" +\\n            \\\" AND\\\" +\\n            \\\" payload LIKE '\\\" + msg.req.params.payload.\\n            replace(/\\\\*/g, \\\"%\\\") + \\\"'\\\" +\\n            \\\" AND deleted=0\\\" +\\n            \\\" AND (\\\" + msg.req.authFilter + \\\")\\\" +\\n            \\\" ORDER BY ID DESC\\\" +\\n            \\\" LIMIT \\\" + msg.req.params.count + \\\";\\\";\\n\\nreturn msg;\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"* Note that we set default of `authFilter` to 1. It means we\\u2019re gonna allow all un-authorized user for now.\\n    * Check `\\\" AND (\\\" + msg.req.authFilter + \\\")\\\" +` part: If `authFilter` is 1, this means `true`, so this query will works normally, but if it\\u2019s 0, this means `false`, so this query will fetch nothing.\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Deleting from DB\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Note that all the APIs has same structure and procedure; all the differences between them are just ReST API endpoints and DB query.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are two ways to accomplish this: \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Recoverable\"), \" and \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Permanent\"), \".\")), mdx(\"h3\", null, \"Recoverable Deletation\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"index/Screen%20Shot%202022-01-17%20at%2011.14.24%20PM.png\",\n    \"alt\": null\n  })), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recoverable deletation is just updating value of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deleted\"), \" column to 1.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Since this is just a updating the DB, so i think it\\u2019s better to use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PATCH\"), \" HTTP method instead of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GET\"), \" method.\")), mdx(\"h3\", null, \"Permanent Deletation\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"index/Screen%20Shot%202022-01-18%20at%203.55.06%20PM.png\",\n    \"alt\": null\n  })), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Permanent deletation is deleting the instance inside of DB.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unlike \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Recoverable Deletation\"), \", i\\u2019m decide to use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DELETE\"), \" HTTP method to do it.\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Microservice Utilities\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"index/Screen%20Shot%202022-01-18%20at%2010.46.59%20PM.png\",\n    \"alt\": null\n  })), mdx(\"h3\", null, \"ReST/GET Current Timetamp\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This functionality coordinates with \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"M2\"), \" API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set ReST Endpoint to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/timestamp\"), \", method to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GET\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"And set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \" node to:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"msg.payload = {\\n    timestamp: (new Date()).getTime().toString()\\n};\\nreturn msg;\\n\")), mdx(\"h3\", null, \"ReST/GET Random Code\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This functionality coordinates with \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"M3\"), \" API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set ReST Endpoint to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/randomcode/:len\"), \", method to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GET\"), \".\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \":len\"), \" represents length of the random code.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"And set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \" node to:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"var randomString = function(length) {\\n    var text = \\\"\\\";\\n    var possible = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\\\";\\n    for(var i = 0; i < length; i++) {\\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\\n    }\\n    return text;\\n}\\n\\nmsg.payload = {\\n    code: randomString(msg.req.params.len)\\n};\\n\\nreturn msg;\\n\")), mdx(\"h3\", null, \"ReST/GET UUID\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This functionality coordinates with \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"M4\"), \" API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"For this functionality, we have to install \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"node-red-contrib-uuid\"), \" plugin to generate UUID.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After that, all we have to do is just pass the generated UUID to HTTP response.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"So, set ReST Endpoint to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/uuid\"), \", method to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GET\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"And set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"function\"), \" node to:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"// Prepare response\\nmsg.payload = {\\n    uuid: msg.payload\\n};\\n\\nreturn msg;\\n\")), mdx(\"h3\", null, \"And other\\u2026\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To implement \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"M5\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"M6\"), \" API, we need to use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://sendgrid.com\"\n  }, \"SendGrid\"), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.twilio.com\"\n  }, \"Twilio\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"But to use both of \\u2018em, we have to pay some money. So, let\\u2019s skip these for now.\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"NOTE: this notes are from “Build Your Own IoT Platform” by Anand Tamboli. And I can’t speak english very well, so some sentences or word…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/chapter-9-creating-re-st-interface","formatString":"DD.MM.YYYY"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}